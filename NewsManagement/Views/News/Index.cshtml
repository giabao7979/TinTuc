@model List<NewsManagement.Models.NewsListItem>
@{
    ViewBag.Title = "Quản lý tin tức";
}

<link href="~/Content/css/site.css" rel="stylesheet" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/4.6.2/css/bootstrap.min.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />

@* ADD THIS LINE *@
@Html.AntiForgeryToken()

<div class="news-management-container">
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <div class="management-card">
                    <!-- Giữ nguyên header -->
                    <div class="card-header-custom d-flex justify-content-between align-items-center">
                        <div>
                            <h3><i class="fas fa-newspaper mr-3"></i>Quản lý tin tức</h3>
                            <p class="mb-0 opacity-75">Quản lý và tổ chức nội dung tin tức</p>
                        </div>
                        <a href="@Url.Action("Create")" class="btn btn-light btn-lg">
                            <i class="fas fa-plus mr-2"></i>Thêm tin tức mới
                        </a>
                    </div>

                    <!-- Giữ nguyên filters section -->
                    <div class="filters-section">
                        @using (Html.BeginForm("Index", "News", FormMethod.Get, new { @class = "filter-form" }))
                        {
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="filter-group">
                                        <label for="categoryId">
                                            <i class="fas fa-folder mr-1"></i>Danh mục
                                        </label>
                                        @Html.DropDownList("categoryId", ViewBag.Categories as SelectList, "-- Tất cả danh mục --", new { @class = "form-control" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="filter-group">
                                        <label for="search">
                                            <i class="fas fa-search mr-1"></i>Tìm kiếm
                                        </label>
                                        @Html.TextBox("search", ViewBag.SearchTerm as string, new { @class = "form-control", placeholder = "Nhập từ khóa tìm kiếm..." })
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="filter-group">
                                        <label>&nbsp;</label>
                                        <div class="d-flex flex-column">
                                            <button type="submit" class="btn btn-primary-custom mb-2">
                                                <i class="fas fa-filter mr-1"></i>Lọc
                                            </button>
                                            <a href="@Url.Action("Index")" class="btn btn-outline-secondary-custom">
                                                <i class="fas fa-times mr-1"></i>Xóa bộ lọc
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>

                    <!-- Messages -->
                    @if (TempData["Success"] != null)
                    {
                        <div class="alert alert-success mx-4 mt-3">
                            <i class="fas fa-check-circle mr-2"></i>@TempData["Success"]
                        </div>
                    }

                    @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage as string))
                    {
                        <div class="alert alert-danger mx-4 mt-3">
                            <i class="fas fa-exclamation-triangle mr-2"></i>@ViewBag.ErrorMessage
                        </div>
                    }

                    <!-- THAY THẾ TOÀN BỘ TABLE SECTION -->
                    @if (Model != null && Model.Count > 0)
                    {
                        <div class="table-responsive">
                            <table class="table news-table">
                                <thead>
                                    <tr>
                                        <th style="width: 35%">Tiêu đề & Tóm tắt</th>
                                        <th style="width: 20%">Danh mục</th>
                                        <th style="width: 12%">Ngày tạo</th>
                                        <th style="width: 10%">Trạng thái</th>
                                        <th style="width: 23%">Thao tác</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var news in Model)
                                    {
                                        <tr data-news-id="@news.Id">
                                            <td>
                                                <div class="news-title">@news.Title</div>
                                                @if (!string.IsNullOrEmpty(news.Summary))
                                                {
                                                    <div class="news-summary">
                                                        @if (news.Summary.Length > 100)
                                                        {
                                                            @(news.Summary.Substring(0, 100) + "...")
                                                        }
                                                        else
                                                        {
                                                            @news.Summary
                                                        }
                                                    </div>
                                                }
                                            </td>
                                            <td>
                                                <div class="category-badges">
                                                    @if (!string.IsNullOrEmpty(news.CategoryNames))
                                                    {
                                                        var categories = news.CategoryNames.Split(',');
                                                        foreach (var category in categories.Take(3))
                                                        {
                                                            <span class="badge category-badge">@category.Trim()</span>
                                                        }
                                                        if (categories.Length > 3)
                                                        {
                                                            <span class="badge badge-light">+@(categories.Length - 3)</span>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <span class="text-muted">Chưa phân loại</span>
                                                    }
                                                </div>
                                            </td>
                                            <td>
                                                <div>@news.CreatedDate.ToString("dd/MM/yyyy")</div>
                                                <small class="text-muted">@news.CreatedDate.ToString("HH:mm")</small>
                                            </td>
                                            <td>
                                                @if (news.Status)
                                                {
                                                    <span class="badge status-badge status-active">
                                                        <i class="fas fa-check mr-1"></i>Hoạt động
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="badge status-badge status-inactive">
                                                        <i class="fas fa-pause mr-1"></i>Tạm dừng
                                                    </span>
                                                }
                                            </td>
                                            <td>
                                                <div class="action-buttons">
                                                    <a href="@Url.Action("Details", new { id = news.Id })"
                                                       class="btn btn-action btn-view"
                                                       title="Xem chi tiết">
                                                        <i class="fas fa-eye"></i>
                                                    </a>
                                                    <a href="@Url.Action("Edit", new { id = news.Id })"
                                                       class="btn btn-action btn-edit"
                                                       title="Chỉnh sửa">
                                                        <i class="fas fa-edit"></i>
                                                    </a>
                                                    <button type="button"
                                                            class="btn btn-action btn-delete"
                                                            title="Xóa tin tức"
                                                            onclick="confirmDelete(@news.Id, '@news.Title')">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <!-- THAY THẾ PAGINATION MỚI -->
                        <div class="pagination-container p-3 border-top bg-light">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    @if (ViewBag.HasPrevious)
                                    {
                                        <a href="@Url.Action("Index", new { categoryId = ViewBag.CategoryId, search = ViewBag.SearchTerm })"
                                           class="btn btn-outline-primary">
                                            <i class="fas fa-arrow-left mr-1"></i>Về đầu
                                        </a>
                                    }
                                </div>

                                <div class="text-center">
                                    <small class="text-muted">
                                        Hiển thị @Model.Count tin tức
                                        @if (!string.IsNullOrEmpty(ViewBag.SearchTerm as string))
                                        {
                                            <span> - Tìm kiếm: "@ViewBag.SearchTerm"</span>
                                        }
                                    </small>
                                </div>

                                <div>
                                    @if (ViewBag.HasNextPage)
                                    {
                                        <a href="@Url.Action("Index", new {
                                               categoryId = ViewBag.CategoryId,
                                               search = ViewBag.SearchTerm,
                                               lastId = ViewBag.NextLastId
                                           })" class="btn btn-primary">
                                            Tiếp theo <i class="fas fa-arrow-right ml-1"></i>
                                        </a>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <!-- No News State - giữ nguyên -->
                        <div class="no-news-state">
                            <div class="no-news-icon">
                                <i class="fas fa-newspaper"></i>
                            </div>
                            <h4>Không có tin tức</h4>
                            <p>Không tìm thấy tin tức phù hợp.</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>


<!-- Delete Confirmation Modal -->
<div class="modal fade delete-modal" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">
                    <i class="fas fa-exclamation-triangle mr-2"></i>Xác nhận xóa tin tức
                </h5>
                <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="warning-icon">
                    <i class="fas fa-trash-alt"></i>
                </div>
                <h5>Bạn có chắc chắn muốn xóa tin tức này?</h5>
                <p class="text-muted mb-4" id="newsTitle"></p>
                <div class="alert alert-warning">
                    <strong>Cảnh báo:</strong> Thao tác này không thể hoàn tác!
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger-custom" id="confirmDeleteBtn">
                    <i class="fas fa-trash mr-2"></i>Xóa tin tức
                </button>
                <button type="button" class="btn btn-secondary-custom" data-dismiss="modal">
                    <i class="fas fa-times mr-2"></i>Hủy bỏ
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Loading Overlay -->
<div class="loading-overlay" id="loadingOverlay">
    <div class="loading-content">
        <div class="spinner"></div>
        <p>Đang xóa tin tức...</p>
    </div>
</div>


<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/4.6.2/js/bootstrap.bundle.min.js"></script>

<script>
var deleteNewsId = null;

function confirmDelete(newsId, newsTitle) {
    console.log('Confirm delete called:', newsId, newsTitle);
    deleteNewsId = newsId;
    $('#newsTitle').text(newsTitle);
    $('#deleteModal').modal('show');
}

$(document).ready(function() {
    // Hide loading overlay on page load
    $('#loadingOverlay').hide();

    // Handle delete confirmation
    $('#confirmDeleteBtn').click(function() {
        if (deleteNewsId) {
            performDeleteAjax(deleteNewsId);
        }
    });

    // Auto-hide alerts
    setTimeout(function() {
        $('.alert:not(.alert-permanent)').fadeOut();
    }, 5000);

    // Add loading state to filter form
    $('.filter-form').submit(function() {
        $(this).find('button[type="submit"]').prop('disabled', true).html('<i class="fas fa-spinner fa-spin mr-1"></i>Đang lọc...');
    });

    // Enhanced table interactions
    $('.news-table tbody tr').hover(
        function() {
            $(this).find('.action-buttons').addClass('show');
        },
        function() {
            $(this).find('.action-buttons').removeClass('show');
        }
    );
});

function performDeleteAjax(newsId) {
    console.log('Starting AJAX delete for news ID:', newsId);

    // Show loading overlay
    $('#loadingOverlay').fadeIn();
    $('#deleteModal').modal('hide');

    // Disable delete button to prevent double-click
    $('#confirmDeleteBtn').prop('disabled', true);

    // Get anti-forgery token
    var token = $('input[name="__RequestVerificationToken"]').val();

    $.ajax({
        url: '@Url.Action("DeleteNews", "News")',
        type: 'POST',
        data: {
            id: newsId,
            __RequestVerificationToken: token
        },
        timeout: 30000, // 30 seconds timeout
        success: function(response) {
            console.log('AJAX response:', response);
            $('#loadingOverlay').fadeOut();
            $('#confirmDeleteBtn').prop('disabled', false);

            if (response.success) {
                // Show success message
                showNotification(response.message, 'success');

                // Remove the row from table with animation
                var $row = $('tr[data-news-id="' + newsId + '"]');
                $row.addClass('table-danger');

                setTimeout(function() {
                    $row.fadeOut(500, function() {
                        $(this).remove();
                        updateUIAfterDelete();
                    });
                }, 1000);

            } else {
                showNotification(response.message || 'Có lỗi xảy ra khi xóa tin tức', 'danger');
            }
        },
        error: function(xhr, status, error) {
            console.error('AJAX Delete error:', {
                status: status,
                error: error,
                responseText: xhr.responseText
            });

            $('#loadingOverlay').fadeOut();
            $('#confirmDeleteBtn').prop('disabled', false);

            var errorMessage = 'Có lỗi xảy ra khi xóa tin tức';

            if (status === 'timeout') {
                errorMessage = 'Yêu cầu xóa quá thời gian chờ. Vui lòng thử lại.';
            } else if (xhr.status === 404) {
                errorMessage = 'Không tìm thấy tin tức cần xóa.';
            } else if (xhr.status === 500) {
                errorMessage = 'Lỗi server. Vui lòng thử lại sau.';
            } else if (error) {
                errorMessage += ': ' + error;
            }

            showNotification(errorMessage, 'danger');
        }
    });
}

function updateUIAfterDelete() {
    // Update total count
    var $totalCountElement = $('.results-info strong').first();
    if ($totalCountElement.length) {
        var currentCount = parseInt($totalCountElement.text());
        var newCount = currentCount - 1;
        $totalCountElement.text(newCount);

        // Update all count displays
        $('.results-info').html($('.results-info').html().replace(/Tìm thấy \d+/, 'Tìm thấy ' + newCount));
    }

    // Check if no news left
    var remainingRows = $('.news-table tbody tr').length;
    if (remainingRows === 0) {
        showNoNewsState();
    }

    console.log('UI updated after delete. Remaining rows:', remainingRows);
}

function showNoNewsState() {
    $('.news-table').closest('.table-responsive').html(`
        <div class="no-news-state text-center py-5">
            <div class="no-news-icon mb-4">
                <i class="fas fa-newspaper fa-4x text-muted"></i>
            </div>
            <h5 class="text-muted mb-3">Không có tin tức</h5>
            <p class="text-muted mb-4">
                Không còn tin tức nào trong danh sách hiện tại.
            </p>
            <div class="no-news-actions">
                <a href="@Url.Action("Create", "News")" class="btn btn-primary mr-2">
                    <i class="fas fa-plus mr-1"></i>Thêm tin tức mới
                </a>
                <a href="@Url.Action("Index", "News")" class="btn btn-outline-secondary">
                    <i class="fas fa-refresh mr-1"></i>Tải lại danh sách
                </a>
            </div>
        </div>
    `);
}

// Enhanced notification function
function showNotification(message, type = 'success') {
    var alertClass = 'alert-' + type;
    var iconClass = type === 'success' ? 'fa-check-circle' :
                   type === 'danger' ? 'fa-exclamation-triangle' :
                   type === 'warning' ? 'fa-exclamation-circle' : 'fa-info-circle';

    // Remove existing notifications
    $('.notification-alert').remove();

    var html = '<div class="alert ' + alertClass + ' alert-dismissible fade show notification-alert position-fixed" role="alert" style="top: 20px; right: 20px; z-index: 9999; min-width: 300px;">';
    html += '<i class="fas ' + iconClass + ' mr-2"></i>';
    html += message;
    html += '<button type="button" class="close" data-dismiss="alert" aria-label="Close">';
    html += '<span aria-hidden="true">&times;</span>';
    html += '</button>';
    html += '</div>';

    $('body').append(html);

    // Auto dismiss after 5 seconds
    setTimeout(function() {
        $('.notification-alert').fadeOut(function() {
            $(this).remove();
        });
    }, 5000);
}

// Keyboard shortcuts
$(document).keydown(function(e) {
    // Ctrl + N = New news
    if (e.ctrlKey && e.keyCode === 78) {
        e.preventDefault();
        window.location.href = '@Url.Action("Create")';
    }

    // Escape key = Close modals
    if (e.keyCode === 27) {
        $('.modal').modal('hide');
        $('#loadingOverlay').fadeOut();
    }
});

// Category badge click to filter
$(document).on('click', '.category-badge', function() {
    var categoryName = $(this).text().trim();
    $('#categoryId option').filter(function() {
        return $(this).text().trim() === categoryName;
    }).prop('selected', true);
    $('.filter-form').submit();
});

// Enhanced search functionality
$('#search').on('input', function() {
    var searchTerm = $(this).val();
    if (searchTerm.length >= 3) {
        // Could add live search here
    }
});
function performDeleteAjax(newsId) {
    console.log('Starting AJAX delete for news ID:', newsId);

    // Show loading overlay
    $('#loadingOverlay').fadeIn();
    $('#deleteModal').modal('hide');

    // Disable delete button to prevent double-click
    $('#confirmDeleteBtn').prop('disabled', true);

    // Get anti-forgery token - TRY MULTIPLE SELECTORS
    var token = $('input[name="__RequestVerificationToken"]').val() ||
                $('input[type="hidden"][name="__RequestVerificationToken"]').val() ||
                $('[name="__RequestVerificationToken"]').val();

    console.log('AntiForgery Token:', token ? 'Found: ' + token.substring(0, 20) + '...' : 'NOT FOUND');
    console.log('All hidden inputs:', $('input[type="hidden"]').length);

    // Debug: list all hidden inputs
    $('input[type="hidden"]').each(function(index) {
        console.log('Hidden input ' + index + ':', $(this).attr('name'), '=', $(this).val() ? $(this).val().substring(0, 20) + '...' : 'empty');
    });

    if (!token) {
        $('#loadingOverlay').fadeOut();
        $('#confirmDeleteBtn').prop('disabled', false);
        showNotification('Lỗi: Không tìm thấy Anti-Forgery Token. Vui lòng tải lại trang.', 'danger');
        return;
    }

    $.ajax({
        url: '@Url.Action("DeleteNews", "News")',
        type: 'POST',
        data: {
            id: newsId,
            __RequestVerificationToken: token
        },
        timeout: 30000,
        success: function(response) {
            console.log('AJAX response:', response);
            $('#loadingOverlay').fadeOut();
            $('#confirmDeleteBtn').prop('disabled', false);

            if (response.success) {
                showNotification(response.message, 'success');

                var $row = $('tr[data-news-id="' + newsId + '"]');
                $row.addClass('table-danger');

                setTimeout(function() {
                    $row.fadeOut(500, function() {
                        $(this).remove();
                        updateUIAfterDelete();
                    });
                }, 1000);

            } else {
                showNotification(response.message || 'Có lỗi xảy ra khi xóa tin tức', 'danger');
            }
        },
        error: function(xhr, status, error) {
            console.error('AJAX Delete error:', {
                status: status,
                error: error,
                responseText: xhr.responseText.substring(0, 500),
                statusCode: xhr.status
            });

            $('#loadingOverlay').fadeOut();
            $('#confirmDeleteBtn').prop('disabled', false);

            var errorMessage = 'Có lỗi xảy ra khi xóa tin tức';

            if (xhr.status === 500 && xhr.responseText.includes('anti-forgery')) {
                errorMessage = 'Lỗi bảo mật: Anti-Forgery Token không hợp lệ. Vui lòng tải lại trang.';
            } else if (status === 'timeout') {
                errorMessage = 'Yêu cầu xóa quá thời gian chờ. Vui lòng thử lại.';
            } else if (xhr.status === 404) {
                errorMessage = 'Không tìm thấy action DeleteNews trong Controller.';
            } else if (xhr.status === 500) {
                errorMessage = 'Lỗi server (500). Vui lòng kiểm tra server logs.';
            }

            showNotification(errorMessage, 'danger');
        }
    });
}
</script>